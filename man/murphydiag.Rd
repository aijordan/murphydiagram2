% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/murphydiag.R
\name{murphydiag}
\alias{murphydiag}
\alias{murphydiag.default}
\alias{murphydiag.lm}
\alias{murphydiag.rq}
\alias{murphydiag.randomForest}
\title{Murphy diagram object}
\usage{
murphydiag(object, ...)

\method{murphydiag}{default}(object, y, type, level = NULL,
  xnames = NULL, ...)

\method{murphydiag}{lm}(object, newdata = NULL, newy = NULL,
  type = "mean", xnames = NULL, ...)

\method{murphydiag}{rq}(object, newdata = NULL, newy = NULL,
  xnames = NULL, ...)

\method{murphydiag}{randomForest}(object, newdata = NULL, newy = NULL,
  xnames = NULL, ...)
}
\arguments{
\item{object}{an object used to select a method.}

\item{...}{further arguments passed to or from other methods.}

\item{y}{an object convertible by \code{\link{as.numeric}}
containing observations.}

\item{type}{a string specifying the type of forecast,
e.g. \code{"mean"}.}

\item{level}{optional; single value in (0, 1);
only required for certain values of \code{type}.}

\item{xnames}{optional; a character vector with the
forecasting methods' names.}

\item{newdata}{optional; a data frame as in
\code{\link{predict.lm}} leading to forecasts
for \code{newy}.}

\item{newy}{optional; a vector of observations
corresponding to forecasts based on \code{newdata}.}
}
\value{
The output is an object of class \code{murphydiag},
  which is a list containing the following components:
  \tabular{ll}{
    \code{x} \tab a data frame of forecasts\cr
    \code{y} \tab a vector of observations\cr
    \code{functional} \tab a list that specifies the forecast functional,
      containing \code{type} and \code{level} (optional).
  }
}
\description{
\code{murphydiag} constructs and returns an object of
class \code{murphydiag}. It is a generic function with
a \code{default} method, and additional methods for classes
\code{\link[stats]{lm}}, \code{\link[randomForest]{randomForest}}, \code{\link[quantreg]{rq}} (from package \code{quantreg}).
}
\details{
In the default version, the user specifies all relevant information (forecasts, realizations, 
information on the type of forecast) manually. Furthermore, \code{murphydiag} accepts fitted model objects
from a few other packages:
\itemize{
\item \dQuote{lm}, see \code{\link[stats]{lm}}
\item \dQuote{rq}, see \code{\link[quantreg]{rq}}
\item \dQuote{randomForest}, see \code{\link[randomForest]{randomForest}}
}
}
\seealso{
\code{\link{murphydiag_diff}},
  \code{\link{c.murphydiag}},
  \code{\link{[.murphydiag}},
  \code{\link{plot.murphydiag}}
}
